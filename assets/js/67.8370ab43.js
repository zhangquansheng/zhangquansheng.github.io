(window.webpackJsonp=window.webpackJsonp||[]).push([[67],{332:function(a,t,v){"use strict";v.r(t);var _=v(10),e=Object(_.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"_40亿个qq号码如何去重"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_40亿个qq号码如何去重"}},[a._v("#")]),a._v(" 40亿个QQ号码如何去重？")]),a._v(" "),t("p",[a._v("采用"),t("code",[a._v("bitmap")]),a._v("这种数据结构，可以顺利地同时解决时间问题和空间问题。")]),a._v(" "),t("p",[a._v("在很多实际项目中，"),t("code",[a._v("bitmap")]),a._v("经常用到。我看了不少组件的源码，发现很多地方都有"),t("code",[a._v("bitmap")]),a._v("实现，"),t("code",[a._v("bitmap")]),a._v("图解如下：")]),a._v(" "),t("p",[t("img",{attrs:{src:"/img/digging-deeper/bitmap-1.webp",alt:"bitmap-1"}})]),a._v(" "),t("p",[a._v("这是一个"),t("code",[a._v("unsigned char")]),a._v("类型，可以看到，共有"),t("code",[a._v("8")]),a._v("位，取值范围是"),t("code",[a._v("[0, 255]")]),a._v("，如上这个"),t("code",[a._v("unsigned char")]),a._v("的值是"),t("code",[a._v("255")]),a._v("，它能标识"),t("code",[a._v("0~7")]),a._v("这些数字都存在。")]),a._v(" "),t("p",[a._v("同理，如下这个"),t("code",[a._v("unsigned char")]),a._v("类型的值是"),t("code",[a._v("254")]),a._v("，它对应的含义是："),t("code",[a._v("1~7")]),a._v("这些数字存在，而数字"),t("code",[a._v("0")]),a._v("不存在：")]),a._v(" "),t("p",[t("img",{attrs:{src:"/img/digging-deeper/bitmap-1.webp",alt:"bitmap-1"}})]),a._v(" "),t("p",[a._v("由此可见，一个"),t("code",[a._v("unsigned char")]),a._v("类型的数据，可以标识"),t("code",[a._v("0~7")]),a._v("这"),t("code",[a._v("8")]),a._v("个整数的存在与否。以此类推：")]),a._v(" "),t("ul",[t("li",[a._v("一个"),t("code",[a._v("unsigned int")]),a._v("类型数据可以标识"),t("code",[a._v("0~31")]),a._v("这"),t("code",[a._v("32")]),a._v("个整数的存在与否。")]),a._v(" "),t("li",[a._v("两个"),t("code",[a._v("unsigned int")]),a._v("类型数据可以标识"),t("code",[a._v("0~63")]),a._v("这"),t("code",[a._v("64")]),a._v("个整数的存在与否。")])]),a._v(" "),t("p",[a._v("显然，可以推导出来："),t("code",[a._v("512MB")]),a._v("大小足够标识所有"),t("code",[a._v("QQ")]),a._v("号码的存在与否，请注意："),t("code",[a._v("QQ")]),a._v("号码的理论最大值为"),t("code",[a._v("2^32 - 1")]),a._v("，大概是"),t("code",[a._v("43")]),a._v("亿左右。")]),a._v(" "),t("p",[a._v("接下来的问题就很简单了：用"),t("code",[a._v("512MB")]),a._v("的"),t("code",[a._v("unsigned int")]),a._v("数组来记录文件中"),t("code",[a._v("QQ")]),a._v("号码的存在与否，形成一个"),t("code",[a._v("bitmap")]),a._v("，比如：")]),a._v(" "),t("div",{staticClass:"language-properties line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-properties"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("bitmapFlag[123]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v("1")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("bitmapFlag[567]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v("1")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("bitmapFlag[123]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v("1")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("bitmapFlag[890]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v("1")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br")])]),t("p",[a._v("实际上就是：")]),a._v(" "),t("div",{staticClass:"language-properties line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-properties"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("bitmapFlag[123]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v("1")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("bitmapFlag[567]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v("1")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[a._v("bitmapFlag[890]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("=")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[a._v("1")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br")])]),t("p",[a._v("然后从小到大遍历所有正整数("),t("code",[a._v("4字节")]),a._v(")，当"),t("code",[a._v("bitmapFlag")]),a._v("值为"),t("code",[a._v("1")]),a._v("时，就表明该数是存在的。")]),a._v(" "),t("h2",{attrs:{id:"扩展练习一"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#扩展练习一"}},[a._v("#")]),a._v(" 扩展练习一")]),a._v(" "),t("h3",{attrs:{id:"文件中有40亿个互不相同的qq号码-请设计算法对qq号码进行排序-内存限制1g"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#文件中有40亿个互不相同的qq号码-请设计算法对qq号码进行排序-内存限制1g"}},[a._v("#")]),a._v(" 文件中有40亿个互不相同的QQ号码，请设计算法对QQ号码进行排序，内存限制1G.")]),a._v(" "),t("p",[a._v("很显然，直接用"),t("code",[a._v("bitmap")]),a._v(", 标记这"),t("code",[a._v("40亿")]),a._v("个"),t("code",[a._v("QQ")]),a._v("号码的存在性，然后从小到大遍历正整数，当"),t("code",[a._v("bitmapFlag")]),a._v("的值为"),t("code",[a._v("1")]),a._v("时，就输出该值，输出后的正整数序列就是排序后的结果。")]),a._v(" "),t("p",[a._v("请注意，这里必须限制"),t("code",[a._v("40亿")]),a._v("个"),t("code",[a._v("QQ")]),a._v("号码互不相同。通过"),t("code",[a._v("bitmap")]),a._v("记录，客观上就自动完成了排序功能。")]),a._v(" "),t("h2",{attrs:{id:"扩展练习二"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#扩展练习二"}},[a._v("#")]),a._v(" 扩展练习二")]),a._v(" "),t("h3",{attrs:{id:"文件中有40亿个互不相同的qq号码-求这些qq号码的中位数-内存限制1g"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#文件中有40亿个互不相同的qq号码-求这些qq号码的中位数-内存限制1g"}},[a._v("#")]),a._v(" 文件中有40亿个互不相同的QQ号码，求这些QQ号码的中位数，内存限制1G.")]),a._v(" "),t("p",[a._v("我知道，一些刷题经验丰富的人，最开始想到的肯定是用堆或者文件切割，这明显是犯了本本主义错误。直接用"),t("code",[a._v("bitmap")]),a._v("排序，当场搞定中位数。")]),a._v(" "),t("h2",{attrs:{id:"扩展练习三"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#扩展练习三"}},[a._v("#")]),a._v(" 扩展练习三")]),a._v(" "),t("h3",{attrs:{id:"文件中有40亿个互不相同的qq号码-求这些qq号码的top-k-内存限制1g"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#文件中有40亿个互不相同的qq号码-求这些qq号码的top-k-内存限制1g"}},[a._v("#")]),a._v(" 文件中有"),t("code",[a._v("40亿")]),a._v("个互不相同的QQ号码，求这些QQ号码的top-K，内存限制1G.")]),a._v(" "),t("p",[a._v("我知道，很多人背诵过"),t("code",[a._v("top-K")]),a._v("问题，信心满满，想到用小顶堆或者文件切割，这明显又是犯了本本主义错误。直接用"),t("code",[a._v("bitmap")]),a._v("排序，当场搞定"),t("code",[a._v("top-K")]),a._v("问题。")]),a._v(" "),t("h2",{attrs:{id:"扩展练习四"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#扩展练习四"}},[a._v("#")]),a._v(" 扩展练习四")]),a._v(" "),t("h3",{attrs:{id:"文件中有80亿个qq号码-试判断其中是否存在相同的qq号码-内存限制1g"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#文件中有80亿个qq号码-试判断其中是否存在相同的qq号码-内存限制1g"}},[a._v("#")]),a._v(" 文件中有80亿个QQ号码，试判断其中是否存在相同的QQ号码，内存限制1G.")]),a._v(" "),t("p",[a._v("我知道，一些吸取了经验教训的人肯定说，直接"),t("code",[a._v("bitmap")]),a._v("啊。然而，又一次错了。根据容斥原理可知：\n因为"),t("code",[a._v("QQ")]),a._v("号码的个数是"),t("code",[a._v("43亿")]),a._v("左右(理论值"),t("code",[a._v("2^32 - 1")]),a._v(")，所以"),t("code",[a._v("80")]),a._v("亿个"),t("code",[a._v("QQ")]),a._v("号码必然存在相同的"),t("code",[a._v("QQ")]),a._v("号码。")])])}),[],!1,null,null,null);t.default=e.exports}}]);