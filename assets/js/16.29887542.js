(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{282:function(t,_,v){"use strict";v.r(_);var r=v(10),a=Object(r.a)({},(function(){var t=this,_=t._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"概览"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#概览"}},[t._v("#")]),t._v(" 概览")]),t._v(" "),_("p",[_("strong",[t._v("对于畏惧算法的朋友来说，可以先刷树的相关题目，试着从框架上看问题，而不要纠结于细节问题")]),t._v("。")]),t._v(" "),_("p",[t._v("推荐阅读："),_("a",{attrs:{href:"https://github.com/lyh200/fucking-algorithm",target:"_blank",rel:"noopener noreferrer"}},[t._v(" labuladong 的算法小抄"),_("OutboundLink")],1)]),t._v(" "),_("h2",{attrs:{id:"核心概念"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#核心概念"}},[t._v("#")]),t._v(" 核心概念")]),t._v(" "),_("h3",{attrs:{id:"big-o-时间复杂度和空间复杂度"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#big-o-时间复杂度和空间复杂度"}},[t._v("#")]),t._v(" Big-O 时间复杂度和空间复杂度")]),t._v(" "),_("p",[_("code",[t._v("大O")]),t._v("复杂度 图表说明：")]),t._v(" "),_("p",[_("img",{attrs:{src:"/img/algorithms/big-o-complexity-chart.png",alt:"大O复杂度"}})]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[_("code",[t._v("大O")]),t._v("记法")]),t._v(" "),_("th",[t._v("术语")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("O(1)")]),t._v(" "),_("td",[t._v("常数介")])]),t._v(" "),_("tr",[_("td",[t._v("O(logn)")]),t._v(" "),_("td",[t._v("对数介")])]),t._v(" "),_("tr",[_("td",[t._v("O(n)")]),t._v(" "),_("td",[t._v("线性介")])]),t._v(" "),_("tr",[_("td",[t._v("O(nlogn)")]),t._v(" "),_("td",[t._v("nlogn介")])]),t._v(" "),_("tr",[_("td",[t._v("O(n^2)")]),t._v(" "),_("td",[t._v("平方介")])]),t._v(" "),_("tr",[_("td",[t._v("O(n^3)")]),t._v(" "),_("td",[t._v("立方介")])]),t._v(" "),_("tr",[_("td",[t._v("O(2^n)")]),t._v(" "),_("td",[t._v("指数介")])]),t._v(" "),_("tr",[_("td",[t._v("O(n!)")]),t._v(" "),_("td",[t._v("阶乘介")])])])]),t._v(" "),_("h3",{attrs:{id:"等差数列求和公式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#等差数列求和公式"}},[t._v("#")]),t._v(" 等差数列求和公式")]),t._v(" "),_("p",[_("img",{attrs:{src:"/img/algorithms/arithmetic_sequence.jpg",alt:"等差数列求和公式"}})]),t._v(" "),_("h3",{attrs:{id:"二分法查找-binarysearch"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#二分法查找-binarysearch"}},[t._v("#")]),t._v(" 二分法查找（binarySearch）")]),t._v(" "),_("p",[t._v("二分法查找，也称为"),_("strong",[t._v("折半法")]),t._v("，是一种在有序数组中查找特定元素的搜索算法。")]),t._v(" "),_("p",[t._v("二分法查找的思路如下：")]),t._v(" "),_("ul",[_("li",[t._v("（1）首先，从数组的中间元素开始搜索，如果该元素正好是目标元素，则搜索过程结束，否则执行下一步。")]),t._v(" "),_("li",[t._v("（2）如果目标元素大于/小于中间元素，则在数组大于/小于中间元素的那一半区域查找，然后重复"),_("code",[t._v("步骤（1）")]),t._v("的操作。")]),t._v(" "),_("li",[t._v("（3）如果某一步数组为空，则表示找不到目标元素。")])]),t._v(" "),_("p",[t._v("二分法查找的时间复杂度"),_("code",[t._v("O(logn)")]),t._v("。")])])}),[],!1,null,null,null);_.default=a.exports}}]);