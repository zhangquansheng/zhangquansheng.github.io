(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{310:function(v,_,o){"use strict";o.r(_);var t=o(10),e=Object(t.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h1",{attrs:{id:"volatile-关键字"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#volatile-关键字"}},[v._v("#")]),v._v(" volatile 关键字")]),v._v(" "),_("p",[_("code",[v._v("volatile")]),v._v(" 关键字最重要的两点功能点是："),_("strong",[v._v("防止JVM的指令重排")]),v._v("和"),_("strong",[v._v("保证变量的内存可见性")]),v._v("。")]),v._v(" "),_("div",{staticClass:"custom-block warning"},[_("p",{staticClass:"custom-block-title"},[v._v("volatile 实现原理")]),v._v(" "),_("p",[v._v("简单的说当把变量声明为"),_("code",[v._v("volatile")]),v._v("时，JVM认为这个变量是共享且不稳定的，每次使用它都到"),_("strong",[v._v("主存")]),v._v("中进行读取。")]),v._v(" "),_("p",[v._v("这里重点要理解 "),_("strong",[v._v("CPU 缓存模型")]),v._v("，具体原理，有机会在深入研究。")])]),v._v(" "),_("h2",{attrs:{id:"并发编程的三个重要特性"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#并发编程的三个重要特性"}},[v._v("#")]),v._v(" 并发编程的三个重要特性")]),v._v(" "),_("ol",[_("li",[v._v("原子性: 一个的操作或者多次操作，要么所有的操作全部都得到执行并且不会收到任何因素的干扰而中断，要么所有的操作都执行，要么都不执行。"),_("code",[v._v("synchronized")]),v._v(" 可以保证代码片段的原子性。")]),v._v(" "),_("li",[v._v("可见性：当一个线程对共享变量进行了修改，那么另外的线程都是立即可以看到修改后的最新值。"),_("code",[v._v("volatile")]),v._v(" 关键字可以保证共享变量的可见性。")]),v._v(" "),_("li",[v._v("有序性：代码在执行的过程中的先后顺序，"),_("code",[v._v("Java")]),v._v(" 在编译器以及运行期间的优化，代码的执行顺序未必就是编写代码时候的顺序。"),_("code",[v._v("volatile")]),v._v(" 关键字可以禁止指令进行重排序优化。")])]),v._v(" "),_("h2",{attrs:{id:"synchronized-和-volatile-的区别"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#synchronized-和-volatile-的区别"}},[v._v("#")]),v._v(" synchronized 和 volatile 的区别")]),v._v(" "),_("p",[_("code",[v._v("synchronized")]),v._v(" 关键字和 "),_("code",[v._v("volatile")]),v._v(" 关键字是两个互补的存在，而不是对立的存在！")]),v._v(" "),_("ul",[_("li",[_("code",[v._v("volatile")]),v._v(" 关键字主要用于解决"),_("strong",[v._v("变量")]),v._v("在多个线程之间的可见性，而"),_("code",[v._v("synchronized")]),v._v("关键字解决的是多个线程之间访问资源的同步性。")]),v._v(" "),_("li",[_("code",[v._v("volatile")]),v._v("关键字是线程同步的轻量级实现，所以 "),_("code",[v._v("volatile")]),v._v(" 性能肯定比 "),_("code",[v._v("synchronized")]),v._v(" 关键字要好。但是 "),_("code",[v._v("volatile")]),v._v(" 关键字只能用于变量而 "),_("code",[v._v("synchronized")]),v._v(" 关键字可以修饰方法以及代码块。")]),v._v(" "),_("li",[_("code",[v._v("volatile")]),v._v(" 关键字能保证数据的可见性，但不能保证数据的原子性。"),_("code",[v._v("synchronized")]),v._v(" 关键字两者都能保证。")])])])}),[],!1,null,null,null);_.default=e.exports}}]);