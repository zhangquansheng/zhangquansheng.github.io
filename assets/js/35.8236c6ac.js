(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{302:function(s,a,e){"use strict";e.r(a);var t=e(10),n=Object(t.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"cas-乐观锁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cas-乐观锁"}},[s._v("#")]),s._v(" CAS 乐观锁 🔨")]),s._v(" "),a("p",[a("code",[s._v("synchronized")]),s._v(" 实际上是一种"),a("strong",[s._v("悲观锁")]),s._v("，这种线程一旦得到锁，其他需要锁的线程就挂起的情况就是"),a("strong",[s._v("悲观锁")]),s._v("。"),a("code",[s._v("CAS")]),s._v("操作的就是乐观锁，每次不加锁而是假设没有冲突而去完成某项操作，如果因为冲突失败就重试，直到成功为止。")]),s._v(" "),a("p",[a("code",[s._v("CAS")]),s._v("是英文单词"),a("code",[s._v("Compare And Swap")]),s._v("的缩写，翻译过来就是比较并替换。")]),s._v(" "),a("p",[a("code",[s._v("CAS")]),s._v("机制当中使用了3个基本操作数："),a("code",[s._v("内存地址V")]),s._v("，"),a("code",[s._v("旧的预期值A")]),s._v("，"),a("code",[s._v("要修改的新值B")]),s._v("。")]),s._v(" "),a("p",[s._v("更新一个变量的时候，只有当变量的预期值A和内存地址V当中的实际值相同时，才会将内存地址V对应的值修改为B。")]),s._v(" "),a("p",[s._v("原子操作类，指的是"),a("code",[s._v("java.util.concurrent.atomic")]),s._v("包下，一系列以"),a("code",[s._v("Atomic")]),s._v("开头的包装类。例如"),a("code",[s._v("AtomicBoolean")]),s._v("，"),a("code",[s._v("AtomicInteger")]),s._v("，"),a("code",[s._v("AtomicLong")]),s._v("。它们分别用于"),a("code",[s._v("Boolean")]),s._v("，"),a("code",[s._v("Integer")]),s._v("，"),a("code",[s._v("Long")]),s._v("类型的原子性操作,而"),a("code",[s._v("Atomic")]),s._v("操作的底层实现正是利用的"),a("strong",[s._v("CAS机制")]),s._v("。")]),s._v(" "),a("p",[a("strong",[s._v("CAS机制")]),s._v(" 也是有缺点的，如下几点：")]),s._v(" "),a("ol",[a("li",[a("code",[s._v("CPU")]),s._v("开销较大: 在并发量比较高的情况下，如果许多线程反复尝试更新某一个变量，却又一直更新不成功，循环往复，会给"),a("code",[s._v("CPU")]),s._v("带来很大的压力。")]),s._v(" "),a("li",[s._v("不能保证代码块的原子性: "),a("code",[s._v("CAS")]),s._v("机制所保证的只是一个变量的原子性操作，而不能保证整个代码块的原子性。比如需要保证"),a("code",[s._v("3")]),s._v("个变量共同进行原子性的更新，就不得不使用"),a("code",[s._v("synchronized")]),s._v("了。")]),s._v(" "),a("li",[a("code",[s._v("ABA")]),s._v("问题： 就是说从"),a("code",[s._v("A")]),s._v("变成"),a("code",[s._v("B")]),s._v("，然后就变成"),a("code",[s._v("A")]),s._v("，但是并不能说明其他线程并没改变过它，利用"),a("code",[s._v("CAS")]),s._v("就发现不了这种改变。")])]),s._v(" "),a("h2",{attrs:{id:"aba-的解决办法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#aba-的解决办法"}},[s._v("#")]),s._v(" ABA 的解决办法")]),s._v(" "),a("ul",[a("li",[s._v("在变量前面追加版本号：每次变量更新就把版本号"),a("code",[s._v("+1")]),s._v("。")]),s._v(" "),a("li",[a("code",[s._v("atomic")]),s._v("包下的"),a("code",[s._v("AtomicStampedReference")]),s._v("、"),a("code",[s._v("AtomicMarkableReference")]),s._v("是"),a("code",[s._v("JDK")]),s._v("中解决"),a("strong",[s._v("CAS")]),s._v("中"),a("strong",[s._v("ABA")]),s._v("问题的两种解决方案,他们的原理是相同的，就是添加一个标记来记录更改，两者的区别如下：\n"),a("ul",[a("li",[a("code",[s._v("AtomicStampedReference")]),s._v(" :  利用一个int类型的标记来记录，它能够记录改变的次数。")]),s._v(" "),a("li",[a("code",[s._v("AtomicMarkableReference")]),s._v(": 利用一个boolean类型的标记来记录，只能记录它改变过，不能记录改变的次数。")])])])]),s._v(" "),a("h2",{attrs:{id:"unsafe"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#unsafe"}},[s._v("#")]),s._v(" Unsafe")]),s._v(" "),a("p",[s._v("查看 "),a("code",[s._v("AtomicLong")]),s._v(" 实现CAS的源码，它是通过调用"),a("code",[s._v("sun.misc.Unsafe")]),s._v("完成 "),a("strong",[s._v("CAS操作")])]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[s._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// java.util.concurrent.atomic.AtomicLong.class")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("AtomicLong")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Number")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("implements")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("java"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("io"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),s._v("Serializable")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n   \n   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ...")]),s._v("\n\n   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n     * Atomically sets the value to the given updated value\n     * if the current value {@code ==} the expected value.\n     *\n     * @param expect the expected value\n     * @param update the new value\n     * @return {@code true} if successful. False return indicates that\n     * the actual value was not equal to the expected value.\n     */")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("boolean")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("compareAndSet")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" expect"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" update"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" unsafe"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("compareAndSwapLong")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" valueOffset"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" expect"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" update"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ...")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br")])]),a("p",[a("code",[s._v("Unsafe")]),s._v(" 是 "),a("code",[s._v("sun.misc")]),s._v(" 包下的一个类，可以直接操作"),a("strong",[s._v("堆外内存")]),s._v("，可以随意查看及修改"),a("strong",[s._v("JVM")]),s._v("中运行时的数据，使"),a("code",[s._v("Java")]),s._v("语言拥有了类似"),a("code",[s._v("C")]),s._v("语言指针一样操作内存空间的能力。")]),s._v(" "),a("p",[a("code",[s._v("Unsafe")]),s._v("的操作粒度不是类，而是内存地址和所对应的数据，增强了"),a("code",[s._v("Java")]),s._v("语言操作底层资源的能力。")])])}),[],!1,null,null,null);a.default=n.exports}}]);