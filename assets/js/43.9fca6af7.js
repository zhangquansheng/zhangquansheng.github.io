(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{307:function(t,r,e){"use strict";e.r(r);var a=e(10),n=Object(a.a)({},(function(){var t=this,r=t._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"抽象工厂模式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#抽象工厂模式"}},[t._v("#")]),t._v(" 抽象工厂模式")]),t._v(" "),r("p",[t._v("抽象工厂模式（"),r("code",[t._v("Abstract Factory Pattern")]),t._v("）是围绕一个超级工厂创建其他工厂。该超级工厂又称为其他工厂的工厂。这种类型的设计模式属于创建型模式。")]),t._v(" "),r("p",[t._v("它的主要意图是提供一个创建一系列相关或相互依赖对象的接口，而无需指定它们具体的类。")]),t._v(" "),r("hr"),t._v(" "),r("p",[t._v("参考文档")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://www.runoob.com/design-pattern/abstract-factory-pattern.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("抽象工厂模式|菜鸟教程"),r("OutboundLink")],1)])])])}),[],!1,null,null,null);r.default=n.exports}}]);