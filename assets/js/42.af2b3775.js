(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{311:function(t,r,e){"use strict";e.r(r);var a=e(10),v=Object(a.a)({},(function(){var t=this,r=t._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"概述"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[t._v("#")]),t._v(" 概述")]),t._v(" "),r("p",[r("strong",[t._v("设计模式")]),t._v("是程序员在设计应用程序或系统时可以用来解决常见问题的最佳形式化实践。")]),t._v(" "),r("p",[r("strong",[t._v("设计模式")]),t._v("可以通过提供经过测试和验证的开发范例来加速开发过程。")]),t._v(" "),r("p",[t._v("重用设计模式有助于防止引起重大问题的细微问题，同时也提高了熟悉这些模式的程序员和架构师的代码可读性。")]),t._v(" "),r("h2",{attrs:{id:"设计模式的类型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#设计模式的类型"}},[t._v("#")]),t._v(" 设计模式的类型")]),t._v(" "),r("table",[r("thead",[r("tr",[r("th",[t._v("序号")]),t._v(" "),r("th",[t._v("模式")]),t._v(" "),r("th",[t._v("描述")]),t._v(" "),r("th",[t._v("包括")])])]),t._v(" "),r("tbody",[r("tr",[r("td",[t._v("1")]),t._v(" "),r("td",[t._v("创建型模式")]),t._v(" "),r("td",[t._v("这些设计模式提供了一种在"),r("strong",[t._v("创建对象")]),t._v("的同时隐藏创建逻辑的方式，而不是使用 new 运算符直接实例化对象。这使得程序在判断针对某个给定实例需要创建哪些对象时更加灵活。")]),t._v(" "),r("td",[t._v("工厂模式（Factory Pattern）、单例模式（Singleton Pattern）、建造者模式（Builder Pattern）等")])]),t._v(" "),r("tr",[r("td",[t._v("2")]),t._v(" "),r("td",[t._v("结构型模式")]),t._v(" "),r("td",[t._v("这些设计模式关注"),r("strong",[t._v("类和对象的组合")]),t._v("。继承的概念被用来组合接口和定义组合对象获得新功能的方式。")]),t._v(" "),r("td",[t._v("过滤器模式（Filter、Criteria Pattern）、装饰器模式（Decorator Pattern）、外观模式（Facade Pattern）、 代理模式（Proxy Pattern）等")])]),t._v(" "),r("tr",[r("td",[t._v("3")]),t._v(" "),r("td",[t._v("行为型模式")]),t._v(" "),r("td",[t._v("这些设计模式特别关注"),r("strong",[t._v("对象之间的通信")]),t._v("。")]),t._v(" "),r("td",[t._v("责任链模式（Chain of Responsibility Pattern）、策略模式（Strategy Pattern） 、模板模式（Template Pattern）等")])])])]),t._v(" "),r("hr"),t._v(" "),r("p",[r("strong",[t._v("参考文档")])]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://java-design-patterns.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("java-design-patterns.com"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://github.com/iluwatar/java-design-patterns",target:"_blank",rel:"noopener noreferrer"}},[t._v("java-design-patterns"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://www.xuxueli.com/blog/?blog=./notebook/2-%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("xuxueli-设计模式.md"),r("OutboundLink")],1)])])])}),[],!1,null,null,null);r.default=v.exports}}]);