(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{286:function(t,a,s){"use strict";s.r(a);var r=s(10),e=Object(r.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"数据结构-数组、链表、栈、队列的理解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据结构-数组、链表、栈、队列的理解"}},[t._v("#")]),t._v(" 数据结构：数组、链表、栈、队列的理解")]),t._v(" "),a("h2",{attrs:{id:"数组-array"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组-array"}},[t._v("#")]),t._v(" 数组(Array)")]),t._v(" "),a("p",[t._v("数组是一种聚合数据类型，它是将具有相同类型的若干变量有序地组织在一起的集合。数组可以说是最基本的数据结构，在各种编程语言中都有对应。一个数组可以分解为多个数组元素，按照数据元素的类型，数组可以分为整型数组、字符型数组、浮点型数组、指针数组和结构数组等。数组还可以有一维、二维以及多维等表现形式。")]),t._v(" "),a("h2",{attrs:{id:"栈-stack"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#栈-stack"}},[t._v("#")]),t._v(" 栈( Stack)")]),t._v(" "),a("p",[t._v("栈是一种特殊的线性表，它只能在一个表的一个固定端进行数据结点的插入和删除操作。栈按照后进先出的原则来存储数据，也就是说，先插入的数据将被压入栈底，最后插入的数据在栈顶，读出数据时，从栈顶开始逐个读出。栈在汇编语言程序中，经常用于重要数据的现场保护。栈中没有数据时，称为空栈。")]),t._v(" "),a("h2",{attrs:{id:"队列-queue"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#队列-queue"}},[t._v("#")]),t._v(" 队列(Queue)")]),t._v(" "),a("p",[t._v("队列和栈类似，也是一种特殊的线性表。和栈不同的是，队列只允许在表的一端进行插入操作，而在另一端进行删除操作。一般来说，进行插入操作的一端称为队尾，进行删除操作的一端称为队头。队列中没有元素时，称为空队列。")]),t._v(" "),a("h2",{attrs:{id:"链表-linked-list"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#链表-linked-list"}},[t._v("#")]),t._v(" 链表( Linked List)")]),t._v(" "),a("p",[t._v("链表是一种数据元素按照链式存储结构进行存储的数据结构，这种存储结构具有在物理上存在非连续的特点。链表由一系列数据结点构成，每个数据结点包括数据域和指针域两部分。其中，指针域保存了数据结构中下一个元素存放的地址。链表结构中数据元素的逻辑顺序是通过链表中的指针链接次序来实现的。")])])}),[],!1,null,null,null);a.default=e.exports}}]);