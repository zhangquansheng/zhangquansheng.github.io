(window.webpackJsonp=window.webpackJsonp||[]).push([[209],{475:function(v,_,t){"use strict";t.r(_);var s=t(10),a=Object(s.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h1",{attrs:{id:"如何设计一个秒杀系统"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#如何设计一个秒杀系统"}},[v._v("#")]),v._v(" 如何设计一个秒杀系统？ 👍")]),v._v(" "),_("p",[v._v("秒杀业务的典型特点有：")]),v._v(" "),_("ol",[_("li",[v._v("瞬时流量大")]),v._v(" "),_("li",[v._v("参与用户多，可秒杀商品数量少")]),v._v(" "),_("li",[v._v("请求读多写少")]),v._v(" "),_("li",[v._v("秒杀状态转换实时性要求高")])]),v._v(" "),_("p",[v._v("秒杀系统本质上就是一个满足"),_("strong",[v._v("高并发")]),v._v("、"),_("strong",[v._v("高性能")]),v._v("和"),_("strong",[v._v("高可用")]),v._v("的分布式系统")]),v._v(" "),_("p",[v._v("参考流程图：")]),v._v(" "),_("p",[_("img",{attrs:{src:"/img/digging-deeper/newseckill.png",alt:"newseckill"}})]),v._v(" "),_("h2",{attrs:{id:"限流"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#限流"}},[v._v("#")]),v._v(" 限流")]),v._v(" "),_("ol",[_("li",[v._v("接入层（nginx）"),_("strong",[v._v("漏桶算法")]),v._v("限流")]),v._v(" "),_("li",[v._v("网关层面添加"),_("strong",[v._v("sentinel")]),v._v("限流（窗口算法）")])]),v._v(" "),_("h2",{attrs:{id:"如何保证不超卖"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#如何保证不超卖"}},[v._v("#")]),v._v(" 如何保证不超卖")]),v._v(" "),_("h3",{attrs:{id:"一、数据库解决-一般不可行"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#一、数据库解决-一般不可行"}},[v._v("#")]),v._v(" 一、数据库解决（一般不可行）")]),v._v(" "),_("ol",[_("li",[v._v("在查询商品库存时加排它锁（for update）")]),v._v(" "),_("li",[v._v("更新数据库减库存，加上乐观锁（stock > 0 ）")])]),v._v(" "),_("p",[v._v("数据库加锁的解决方案，性能很不好，在高并发的情况下，还可能存在因为获取不到数据库连接或者因为超时等待而报错。")]),v._v(" "),_("h3",{attrs:{id:"二、分布式锁"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#二、分布式锁"}},[v._v("#")]),v._v(" 二、分布式锁")]),v._v(" "),_("ol",[_("li",[v._v("Redisson 分布式锁对商品加锁，只有获取到锁的才能去扣库存。")])]),v._v(" "),_("p",[v._v("这种方案的缺点是：很多用户对一个商品同时下单时，因为是基于分布式锁的串行处理，导致无法同时处理同一个商品的大量下单请求。")]),v._v(" "),_("h3",{attrs:{id:"三、分布式锁-分库存"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#三、分布式锁-分库存"}},[v._v("#")]),v._v(" 三、分布式锁 + 分库存")]),v._v(" "),_("ol",[_("li",[v._v("把商品的库存分为N个KEY")]),v._v(" "),_("li",[v._v("用户下单对用户ID进行%N计算，看选中哪个KEY。")]),v._v(" "),_("li",[v._v("当其中KEY库存不足时，可以自动释放锁，并自动换成下一个分段的KEY，在尝试去扣库存。")])]),v._v(" "),_("h3",{attrs:{id:"四、redis-lua-脚本-异步队列-mq"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#四、redis-lua-脚本-异步队列-mq"}},[v._v("#")]),v._v(" 四、redis lua 脚本 + 异步队列/MQ")]),v._v(" "),_("ol",[_("li",[v._v("首先在redis中进行预减库存（lua 脚本 写判断条件，然后执行 decr 指令），当redis中的库存不足时，直接返回失败；")]),v._v(" "),_("li",[v._v("将预减库存成功的，放入请求异步队列；")]),v._v(" "),_("li",[v._v("服务端从异步队列，根据业务判断（例如：是否已经秒杀过了）取出请求，生成秒杀订单，"),_("strong",[v._v("减少数据库库存")]),v._v("；")])]),v._v(" "),_("blockquote",[_("p",[v._v("以上的异步队列，也可以换成异步消息（MQ）")])]),v._v(" "),_("p",[v._v("缺点：由于异步写入DB，可能存在数据不一致。")])])}),[],!1,null,null,null);_.default=a.exports}}]);