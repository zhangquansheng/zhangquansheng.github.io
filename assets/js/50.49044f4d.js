(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{316:function(t,r,_){"use strict";_.r(r);var n=_(10),v=Object(n.a)({},(function(){var t=this,r=t._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"享元模式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#享元模式"}},[t._v("#")]),t._v(" 享元模式")]),t._v(" "),r("p",[t._v("享元模式（"),r("code",[t._v("Flyweight Pattern")]),t._v("）主要用于减少创建对象的数量，以减少内存占用和提高性能。这种类型的设计模式属于"),r("strong",[t._v("结构型模式")]),t._v("。")]),t._v(" "),r("p",[t._v("它的主要意图是运用"),r("strong",[t._v("共享技术")]),t._v("有效地支持大量"),r("strong",[t._v("细粒度的对象")]),t._v("。")]),t._v(" "),r("p",[t._v("在享元模式中可以共享的相同内容称为"),r("strong",[t._v("内部状态(Intrinsic State)")]),t._v("，而那些需要外部环境来设置的不能共享的内容称为"),r("strong",[t._v("外部状态(Extrinsic State)")]),t._v("，\n其中外部状态和内部状态是相互独立的，外部状态的变化不会引起内部状态的变化，通过共享不变的部分，达到减少对象数量并节约内存的目的。")]),t._v(" "),r("p",[t._v("在享元模式中通常会出现"),r("strong",[t._v("工厂模式")]),t._v("，需要创建一个享元工厂来负责维护一个享元池(Flyweight Pool)（用于存储具有相同内部状态的享元对象）。")]),t._v(" "),r("p",[t._v("实际开发中，"),r("code",[t._v("JAVA")]),t._v("中的"),r("code",[t._v("String")]),t._v("的常量池（池技术），数据库连接池都是"),r("strong",[t._v("享元模式")]),t._v("。")]),t._v(" "),r("hr"),t._v(" "),r("p",[t._v("参考文档")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://www.runoob.com/design-pattern/flyweight-pattern.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("享元模式|菜鸟教程"),r("OutboundLink")],1)])])])}),[],!1,null,null,null);r.default=v.exports}}]);